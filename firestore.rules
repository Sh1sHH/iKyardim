rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasAdminRole() {
      return isAuthenticated() && 
        (request.auth.token.admin == true || request.auth.token.superAdmin == true);
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || hasAdminRole();
      allow delete: if hasAdminRole();
      
      // Nested collections under users
      match /{document=**} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }

    // Public collections (if needed)
    match /public/{document=**} {
      allow read: if true;
      allow write: if hasAdminRole();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 